# 1 - Tiles generation
tiles_generation.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  image_dir: /mnt/s3/proj-rooftops/02_Data/initial/Geneva/ORTHOPHOTOS/2019/TIFF_TRUEORTHO/
  roofs_dir: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  tiles_dir: input/tile_list/GT_rooftops_EGID_selection_v3_tiles.shp
  roofs_list_dir: input/EGID_list/GT_rooftops_EGID_selection_v3.shp
  output_dir: input/tile_list/
  buffer: 1                #m, Distance buffer around the rooftop shape (prevent to "cut" the rooftop border)
  mask: false               # Choose if a building mask (by EGID) is applied to image


# 2- Create an image mask keeping buildings
mask_for_buildings.py:
  transparency: true
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/data/
  roofs_dir: /mnt/data-02/cherny/git/proj-rooftops/data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  layer: labelling subset
  image_dir: /mnt/data-02/cherny/git/proj-rooftops/input/tiles/


# 3 - Segment Anything Method
SAM_rooftops.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  image_dir:  input/tile_list/
  shape_dir: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT_EGID.shp
  output_dir: output/SAM/GT/
  vector_extension: 'gpkg'          # 'gpkg' or 'shp'
  image_crop:                       # Activate the option to crop the input image according to pixel coordinates
    enable: false
    size: [0,1026,0,1026] 
  SAM:
    dl_checkpoints: False            # True: automatic dl from server, Flase: dl manually files https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth
    checkpoints_dir: model/
    checkpoints: 'sam_vit_h_4b8939.pth'  # sam_vit_h_4b8939.pth; sam_vit_l_0b3195.pth; sam_vit_b_01ec64.pth
    batch: false
    foreground: true
    unique: true
    mask_multiplier: 255
    custom_SAM: true


# 4 - Create an image mask keeping buildings
produce_vector_layer.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  detection_dir: output/SAM/GT/segmented_images/
  roofs_dir: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  vector_extension: 'gpkg'          # 'gpkg' or 'shp'
  srs: "EPSG:2056"                       # Projection of the input file
  output_dir: output/SAM/GT/


# 5 - Evaluate the results
assess_detection.py:  
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/ 
  gt: data/GT/EGID2034760/CAD_BATIMENT_HORSOL_OCCUPATION_EGID2034760.gpkg
  detection: output/SAM/tests/sensitivity_analysis/SAM_vector_layer.gpkg
  output_dir: output/SAM/tests/sensitivity_analysis/
  egid: 2034760              # For now the evaluation is done on a given building. It will be change in the future 


# 6 - Hyperparamters optimization
SAM_optimization.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  image_dir:  input/tiles_opti/
  shp_roofs_dir: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  shp_roofs_egid_dir: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT_EGID.shp
  gt: data/GT/CAD_BATIMENT_HORSOL_OCCUPATION_GT.gpkg
  output_dir: output/SAM/opti/
  detection: 'SAM_vector_layer'
  vector_extension: 'gpkg'                # 'gpkg' or 'shp'
  srs: "EPSG:2056"                        # Projection of the input file 
  image_crop:                             # Activate the option to crop the input image according to pixel coordinates
    enable: false
    size: [0,1026,0,1026] 
  SAM:
    dl_checkpoints: False                 # True: automatic dl from server, Flase: dl manually files https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth
    checkpoints_dir: model/
    checkpoints: 'sam_vit_h_4b8939.pth'   # sam_vit_h_4b8939.pth; sam_vit_l_0b3195.pth; sam_vit_b_01ec64.pth
    batch: false
    foreground: true
    unique: true
    mask_multiplier: 255
    n_trials: 5                           # Number of trial to perform to find the optimized hyperparamters 
    param_grid:                           # Define hyperameters values to test 
      points_per_side: [32, 64, 128]
      points_per_batch: [64]
      pred_iou_thresh: [0.85,0.88]
      stability_score_thresh: [0.95]
      stability_score_offset: [1.0]
      box_nms_thresh: [0.7]             
      crop_n_layers: [0]
      crop_nms_thresh: [0.7]
      crop_n_points_downscale_factor: [1]
      min_mask_region_area: [0]