# 1 - Tiles generation
tiles_generation.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  image_dir: /mnt/s3/proj-rooftops/02_Data/initial/Geneva/ORTHOPHOTOS/2019/TIFF_TRUEORTHO/
  tiles_shp: input/tile_list/GT_rooftops_EGID_selection_v3_tiles.shp
  gt_egid_shp: input/EGID_list/GT_rooftops_EGID_selection_v3.shp
  output_dir: input/tile_list/
  buffer: 1                 #m, Distance buffer around the rooftop shape (prevent to "cut" the rooftop border)
  mask: False               # Choose if a building mask (by EGID) is applied to image

# 2 - Segment Anything Method
SAM_rooftops.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  image_dir:  input/tile_list/
  shp_roofs: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT_EGID.shp
  output_dir: output/SAM/GT/
  vector_extension: 'gpkg'          # 'gpkg' or 'shp'
  image_crop:                       # Activate the option to crop the input image according to pixel coordinates
    enable: false
    size: [0,1026,0,1026] 
  SAM:
    dl_checkpoints: False            # True: automatic dl from server, Flase: dl manually files https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth
    checkpoints_dir: model
    checkpoints: 'sam_vit_h_4b8939.pth'  # sam_vit_h_4b8939.pth; sam_vit_l_0b3195.pth; sam_vit_b_01ec64.pth
    batch: false
    foreground: true
    unique: true
    mask_multiplier: 255
    custom_SAM: false

# 3 - Create an image mask keeping buildings
produce_vector_layer.py:
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/
  detection_dir: output/SAM/GT/segmented_images/
  shp_roofs: data/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  vector_extension: 'gpkg'          # 'gpkg' or 'shp'
  srs: "EPSG:2056"                       # Projection of the input file
  output_dir: output/SAM/GT/

# 4 - Evaluate the results
assess_detection.py:  
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/ 
  gt: data/GT/EGID2034760/CAD_BATIMENT_HORSOL_OCCUPATION_EGID2034760.gpkg
  detection: output/SAM/tests/sensitivity_analysis/SAM_vector_layer.gpkg
  output_dir: output/SAM/tests/sensitivity_analysis/
  egid: 2034760              # For now the evaluation is done on a given building. It will be change in the future 


## Additional scripts/processes

# Create an image mask keeping buildings
mask_for_buildings.py:
  transparency: true
  working_dir: /mnt/data-02/cherny/git/proj-rooftops/data/
  image_dir: /mnt/data-02/cherny/git/proj-rooftops/input/tiles/
  roofs_shp: vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp

# Prepare the tiles geometry according to the AOI and zoom level
prepare_data.py: 
  srs: "EPSG:2056"                       # Projection of the input file
  datasets:
    labels_shapefile: /mnt/data-02/cherny/git/proj-rooftops/data/AOI.shp
  output_folder: output/SAM/
  zoom_level: 18    #z, keep between 15 and 18  

# Request tiles according to the provided AOI and tiles parameters
generate_tilesets.py:
  debug_mode: False             #reduced amount of tiles
  datasets:
    aoi_tiles_geojson: /mnt/data-02/cherny/git/proj-rooftops/output/SAM/tiles.geojson
    orthophotos_web_service:
      type: XYZ # supported values: 1. MIL = Map Image Layer 2. WMS 3. XYZ
      url: https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.swissimage-product/default/2021/3857/{z}/{x}/{y}.jpeg
      # url: https://wms.geo.admin.ch/service
      # layers: ch.swisstopo.swissimage
      # srs: "EPSG:2056"
  output_folder: /mnt/data-02/cherny/git/proj-rooftops/output/SAM/
  tile_size: 512 # per side, in pixels
  overwrite: True
  n_jobs: 10
  COCO_metadata:
    year: 2021
    version: 1.0
    description: Swiss Image Hinterground w/
    contributor: swisstopo
    url: https://swisstopo.ch
    license:
      name: Unknown
      url:
    category:
        name: "Roof"
        supercategory: "Land usage"