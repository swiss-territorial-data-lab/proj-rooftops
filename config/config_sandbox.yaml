filter_by_attributes.py:
  working_directory: C:\Users\gwena\Documents\STDL\2_En_cours\occupation-toitures\02_Data
  output_directory: outputs/roof_classification
  input_files:
    roofs: inputs/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
    potential_solar_surfaces: inputs/vectors/SHP_OCEN_SOLAIRE_ID_SURFACE_BASE/OCEN_SOLAIRE_ID_SURFACE_BASE.shp
    heritage:
      ensembles: inputs/vectors/SHP_DPS_ENSEMBLE/DPS_ENSEMBLE.shp
      classement: inputs/vectors/SHP_DPS_CLASSEMENT/DPS_CLASSEMENT.shp
    industrial_zones: inputs/vectors/SHP_FTI_PERIMETRE/FTI_PERIMETRE.shp
  parameters:
    solar_absolute_minimum_area: 2  # The script should be adapted for it to be the absolute minimum area
    houses:
      flat_vs_pitched: 20   # angle limit in degree
      flat_roofs:
        solar_area: 25      # surface limit in m2
      pitched_roofs:
        solar_area: 15      # surface limit in m2
    industrial_buildings:
      flat_vs_pitched: 20   # angle limit in degree
      flat_roofs:
        solar_area: 200      # surface limit in m2
      pitched_roofs:
        solar_area: 150      # surface limit in m2
    vegetation_area: 20     # surface limit in m2
    vegetation_inclination: 15    # 5% = 2.86Â° -> set to 15, because we have the average slope and it is very sensitive to obstacles


assess_feedback.py:
  working_directory: .
  input_folder: inputs/
  output_folder: outputs/expert_control
  output_file: experts_feedback
  expert: <EXPERT> # Add the name of the result's reviewer
  append: False # If True new results will be add to the existing file otherwise data will be overwritten


assess_flai.py:  
  working_dir: .
  method: one-to-many       # one-to-one or one-to-many
  tiles: inputs/LiDAR/Emprises tuiles Lidar 2019.shp
  gt: processed/manual_GT/merged_occupied_surface.shp
  detection: processed/tests/flai/2488500_1116500.shp