# 1 - Tiles generation
generate_tiles.py:
  working_dir: .
  image_dir: ../../../../s3/proj-rooftops/02_Data/initial/Geneva/ORTHOPHOTOS/2019/TIFF_TRUEORTHO/
  tiles: input/image_segmentation/ground_truth/tiles/Tuiles.shp
  egids: input/image_segmentation/ground_truth/egid/EGIDs_GT_training_subsample.csv
  roofs: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  # roofs: input/image_segmentation/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  output_dir: input/image_segmentation/tiles/optimization
  buffer: 1                  # m, Distance buffer around the rooftop shape (prevent to "cut" the rooftop border)
  mask: False                # Choose if a building mask (by EGID) is applied to image

# 2 - Segment Anything Method
segment_images.py:
  working_dir: .
  image_dir:  input/image_segmentation/tiles
  output_dir: output/image_segmentation
  vector_extension: 'gpkg' # 'gpkg' or 'shp'
  image_crop: # Activate the option to crop the input image according to pixel coordinates
    enable: False
    size: [0, 1052, 0, 1052] # Crop image to perform test 
  SAM:
    dl_checkpoints: False # True: automatic dl from server, Flase: dl manually files https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth
    checkpoints_dir: model
    checkpoints: 'sam_vit_h_4b8939.pth' # sam_vit_h_4b8939.pth; sam_vit_l_0b3195.pth; sam_vit_b_01ec64.pth
    batch: False
    foreground: True
    unique: True
    mask_multiplier: 255
    custom_SAM: False
    SAM_parameters: {
      "points_per_side": 64,
      "pred_iou_thresh": 0.86,
      "stability_score_thresh": 0.92,
      "crop_n_layers": 1,
      "crop_n_points_downscale_factor": 1,
      "min_mask_region_area": 100,
      }
    show_masks: True # Enable to show binary and annotated masks (save annotated mask) 

# 3 - Create an image mask keeping buildings
produce_vector_layer.py:
  working_dir: .
  ground_truth: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  egids: input/image_segmentation/ground_truth/egid/EGIDs_GT_training_subsample.csv
  # roofs: input/image_segmentation/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  roofs: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  output_dir: output/image_segmentation/
  vector_extension: 'gpkg' # 'gpkg' or 'shp'
  crs: "EPSG:2056" # Projection of the input file

# 4 - Evaluate the results
assess_results.py:  
  working_dir: .
  ground_truth: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  detections: output/image_segmentation/vectors/roof_segmentation.gpkg
  egids: input/image_segmentation/ground_truth/egid/EGIDs_GT_training_subsample.csv
  # egids: input/image_segmentation/ground_truth/egid/EGIDs_full_GT.csv
  # roofs: input/image_segmentation/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  roofs: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  output_dir: output/image_segmentation/assessment/
  method: fusion # Method choices 1: one-to-one, 2: one-to-many, 3: charges, 4: fusion 
  additional_metrics: True
  visualisation: True
  threshold: 0.1 # Threshold value to consider that a detection overlaps a label
  object_attributes:
    parameters: ['area', 'nearest_distance_border'] # Choice between: 'area', 'nearest_distance_border', 'nearest_distance_centroid' 
    area_ranges:  [[0,1], [1,10], [10,50], [50,100]] 
    distance_ranges: [[0,1], [1,10], [10, 100]]

# 5 - Estimate the free surface
calculate_free_surface.py:
  working_dir: .
  ground_truth: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  detections: output/image_segmentation/vectors/roof_segmentation.gpkg
  egids: input/image_segmentation/ground_truth/egid/EGIDs_GT_training_subsample.csv
  roofs: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  output_dir: output/image_segmentation/assessment/
  method: fusion # Method choices 1: one-to-one, 2: one-to-many, 3: charges, 4: fusion 
  threshold: 0.1
  visualisation: True

# 6 - Hyperparamters optimization
optimize_hyperparameters.py:
  working_dir: .
  image_dir: input/image_segmentation/tiles/optimization
  roofs: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  # roofs: input/image_segmentation/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  ground_truth: input/image_segmentation/ground_truth/occupation/custom/roofs_STDL_proofed_2023-10-25_v3.shp
  egids: input/image_segmentation/ground_truth/egid/EGIDs_GT_training_subsample.csv
  detections: output/image_segmentation/optimization/vectors/roof_segmentation.gpkg
  output_dir: output/image_segmentation/optimization/
  vector_extension: 'gpkg' # 'gpkg' or 'shp'
  crs: "EPSG:2056" # Projection of the input file 
  method: fusion # Method choices 1: one-to-one, 2: one-to-many, 3: charges, 4: fusion 
  additional_metrics: False
  visualisation: True
  threshold: 0.1 # Threshold value to consider that a detection overlaps a label
  object_attributes:
    parameters: ['area', 'nearest_distance_border']  # Choice between: 'area', 'nearest_distance_border', 'nearest_distance_centroid' 
    area_ranges:  [[0,1], [1,10], [10,50], [50,100]] 
    distance_ranges: [[0,1], [1,10], [10, 100]]
  image_crop: # Activate the option to crop the input image according to pixel coordinates
    enable: false
    size: [0, 1026, 0, 1026] 
  SAM:
    dl_checkpoints: False # True: automatic dl from server, Flase: dl manually files https://dl.fbaipublicfiles.com/segment_anything/sam_vit_h_4b8939.pth
    checkpoints_dir: model/
    checkpoints: 'sam_vit_h_4b8939.pth' # sam_vit_h_4b8939.pth; sam_vit_l_0b3195.pth; sam_vit_b_01ec64.pth
    batch: false
    foreground: true
    unique: true
    mask_multiplier: 255
    custom_SAM: True
    show_masks: False 
  optimization:
    n_trials: 100 # Maximum number of trial to perform to find the optimized hyperparamters. Can be less if all the parameter search combination have been explored 
    sampler: 'TPESampler' # Choices: 1:TPESampler; 2:GridSampler 
    param_grid: # Define explicit hyperameters values to test: valid only for the GridSampler method. Values will be ignored using the TPESampler method 
      points_per_side: [160, 160]
      points_per_batch: [64, 64]
      pred_iou_thresh: [0.9, 0.9]
      stability_score_thresh: [0.95,0.95]
      stability_score_offset: [8.0,8.0]
      box_nms_thresh: [0.1, 1.0, 5.0]             
      crop_n_layers: [0, 2, 5]
      crop_nms_thresh: [5.0,5.0]
      crop_overlap_ratio: [0, 1]
      crop_n_points_downscale_factor: [0,0]
      min_mask_region_area: [50, 50]


## Additional scripts/processes - sandbox

# !!! Evaluate the results: test on synthetic examples for development
assess_dev.py:  
  working_dir: .
  ground_truth: data/GT/synthetic_examples/ground_truth_synthetic.gpkg
  output_dir: output/metrics_charge
  detections: data/GT/synthetic_examples/detection_synthetic.gpkg
  egids: input/image_segmentation/ground_truth/EGIDs_full_GT.csv
  roofs: input/image_segmentation/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  method: many-to-many
  threshold: 0.1 # Threshold value to consider that a detection overlaps a label

# Create an image mask keeping buildings
mask_for_buildings.py:
  transparency: true
  working_dir: data/
  image_dir: ../input/tiles/
  roofs_shp: vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp

# Prepare the tiles geometry according to the AOI and zoom level
prepare_data.py: 
  srs: "EPSG:2056"                       # Projection of the input file
  datasets:
    labels_shapefile: data/AOI.shp
  output_folder: output/SAM/
  zoom_level: 18    #z, keep between 15 and 18  

# Request tiles according to the provided AOI and tiles parameters
generate_tilesets.py:
  debug_mode: False             #reduced amount of tiles
  datasets:
    aoi_tiles_geojson: output/SAM/tiles.geojson
    orthophotos_web_service:
      type: XYZ # supported values: 1. MIL = Map Image Layer 2. WMS 3. XYZ
      url: https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.swissimage-product/default/2021/3857/{z}/{x}/{y}.jpeg
      # url: https://wms.geo.admin.ch/service
      # layers: ch.swisstopo.swissimage
      # srs: "EPSG:2056"
  output_folder: output/SAM/
  tile_size: 512 # per side, in pixels
  overwrite: True
  n_jobs: 10
  COCO_metadata:
    year: 2021
    version: 1.0
    description: Swiss Image Hinterground w/
    contributor: swisstopo
    url: https://swisstopo.ch
    license:
      name: Unknown
      url:
    category:
        name: "Roof"
        supercategory: "Land usage"