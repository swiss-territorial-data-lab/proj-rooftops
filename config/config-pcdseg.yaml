# 1 - Prepare the lidar point cloud
prepare_data.py:
  working_dir: /home/gsalamin/Documents/project_data/rooftops
  pcd_dir: initial/LiDAR/2019
  inputs:
    pcd_tiles: initial/LiDAR/Emprises tuiles Lidar 2019.shp
    shp_roofs: initial/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
    egids: EGIDs_full_GT.csv
  output_dir: processed/PCD_segmentation
  filters:
    building_type: 'all'
    filter_class: False
    class_number: 6                 # 6: Building class
    filter_roof: True             # Remove all the point below the roof altitude
    distance_buffer: 1.0            #m, buffer value
  overwrite: false
  visualisation: false

# 2 - Point Cloud plane segmentation and clustering
pcd_segmentation.py: 
  working_dir: /home/gsalamin/Documents/project_data/rooftops
  input_dir: processed/PCD_segmentation
  output_dir: processed/PCD_segmentation
  egids: processed/PCD_segmentation/completed_egids.csv
  segmentation:
    planes:
      # number_planes: 2
      distance_threshold: 0.07
      ransac: 3
      iterations: 7500
      eps: 11
      min_points: 450
    clusters:
      eps: 0.59
      min_points: 20
  visualisation: False

# 3 - 2D vectorisation of segmented 3D point cloud 
vectorization.py:  
  working_dir: /home/gsalamin/Documents/project_data/rooftops
  input_dir: processed/PCD_segmentation
  output_dir: processed/PCD_segmentation
  egids: EGIDs_full_GT.csv
  epsg: 2056
  area_threshold: 
    min: 18        # m2, threshold for the area of the segmented sections. Below this value the vectorized polygon in will be classified as object and not plane
    max: 42       # m2, threshold for the area of the segmented objects. Above this value the vectorized object in will be classified as plane and not object
  alpha_shape: 2.4          # Alpha parameter used with the alpha shape algorithm used to define a bounding polygon around a group of points 
  visualisation: False

# 4 - Evaluate the results
assess_results.py: 
  working_dir: /home/gsalamin/Documents/project_data/rooftops
  output_dir: processed/PCD_segmentation
  detections: processed/PCD_segmentation/all_EGID_occupation.gpkg
  ground_truth: ground_truth/objects_on_roofs.shp
  roofs: initial/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
  egids: EGIDs_full_GT.csv
  method: fusion
  threshold: 0.1
  additional_metrics: False
  visualisation: False
  object_attributes:
    parameters: ['area', 'nearest_distance_border'] # Choice between: 'area', 'nearest_distance_border', 'nearest_distance_centroid' 
    area_ranges:  [[0,1], [1,10], [10,50], [50,100]] 
    distance_ranges: [[0,1], [1,10], [10, 100]]

# 5 - Estimate the free surface
calculate_free_surface.py:
    working_dir: /home/gsalamin/Documents/project_data/rooftops
    output_dir: processed/PCD_segmentation
    detections: processed/PCD_segmentation/all_EGID_occupation.gpkg
    ground_truth: ground_truth/objects_on_roofs.shp
    roofs: initial/vectors/SHP_CAD_BATIMENT_HORSOL_TOIT/CAD_BATIMENT_HORSOL_TOIT.shp
    egids: EGIDs.csv
    method: many-to-many
    threshold: 0.1
    visualisation: True


# 2 & 3 & 4 - Optimization of the hyperparameters
optimize_hyperparam_LiDAR.py:
  working_dir: /home/gsalamin/Documents/project_data/rooftops/processed/PCD_segmentation
  egids: completed_egids.csv
  ground_truth: ../../ground_truth/objects_on_roofs.shp
  detections: all_EGID_occupation.gpkg
  epsg: 2056
  parameters:
    segmentation:
      planes:
        number_planes: 2
        distance_threshold: 0.07
        ransac: 3
        iterations: 7500
        eps: 11
        min_points: 450
      clusters:
        eps: 0.59
        min_points: 20
    area_threshold: 
      min: 18        # m2. Below this value the vectorized polygon in will be classified as object and not plane
      max: 42       # m2. Above this value the vectorized object in will be classified as plane and not object
    alpha_shape: 2.4          # Alpha parameter used with the alpha shape algorithm used to define a bounding polygon around a group of points 
  method: one-to-one
  visualisation: None
